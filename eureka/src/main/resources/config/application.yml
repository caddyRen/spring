spring:
  profiles:
    active: dev
  main:
    banner-mode: log
#--------开启安全模块-------#
  security: #开启服务注册认证机制
    basic:
      enabled: true #确认开启认证，默认true
    user:
      name: mumu
      password: 66
#---------安全模块------------#

#eureka配置 TODO 抽离 eureka client 模块
eureka:
  instance:
    hostname: localhost #服务注册中心实例的主机名,eureka页面，鼠标放上去显示主机信息
    app-group-name: mumu #注册在Eureka服务中的应用组名
    appname: eureka-server #注册在的Eureka服务中的应用名称
    instance-id: ${eureka.instance.appname}-${server.port:8761} #该实例注册到服务中心的唯一ID
    prefer-ip-address: true #该实例，相较于hostname是否优先使用IP
    lease-renewal-interval-in-seconds: 12 #该实例给服务中心发送心跳的间隔时间，用于表明该服务实例可用
    lease-expiration-duration-in-seconds: 36 #服务中心删除此服务实例的等待时间(秒为单位),时间间隔为最后一次服务中心接受到的心跳时间
    registry:
      default-open-for-traffic-count: 6 #该实例，注册服务中心，默认打开的通信数量
      expected-number-of-clients-sending-renews: 6  #每分钟续约次数
    home-page-url-path: / #该实例的主页url,相对路径
    health-check-url-path: /health #该实例健康检查url,相对路径
    status-page-url-path: /info #该实例的状态呈现url,相对路径
    non-secure-port-enabled: true #http通信端口是否启用
    non-secure-port: ${server.port:8761} #http通信端口
    initial-status: up #初始化该实例，注册到服务中心的初始状态
    instance-enabled-onit: true #表明是否只要此实例注册到服务中心，立马就进行通信
    namespace: ${eureka.instance.appname:eureka-server} #该服务实例的命名空间,用于查找属性
  client: #eureka客户端配置
    healthcheck:
      enabled: true #开启健康检查，没有服务注册进去会异常
    enabled: true #是否可用
    register-with-eureka: false #实例是否在eureka服务器上注册自己的信息以供其他服务发现，默认为true
    fetch-registry: false #此客户端是否获取eureka服务器注册表上的注册信息，默认为true
    filter-only-up-instances: true #是否过滤掉，非UP的实例。默认为true
    region: guangdong #获取实例所在的地区。默认为us-east-1
    prefer-same-zone-eureka: true #实例是否使用同一zone里的eureka服务器，默认为true，理想状态下，eureka客户端与服务端是在同一zone下
    availability-zones: #只会注册到可用区域的注册中心
      guangdong: gz,sz # 获取实例所在的地区下可用性的区域列表，用逗号隔开。（AWS）
    service-url:
      gz: http://mumu:66@${eureka.client.service-url.gz.ip:127.0.0.1}:${eureka.client.service-url.gz.port:8762}/eureka/
      sz: http://mumu:66@${eureka.client.service-url.sz.ip:127.0.0.1}:${eureka.client.service-url.sz.port:8762}/eureka/
  server:
    enable-self-preservation: false #服务端开启自我保护模式。无论什么情况，服务端都会保持一定数量的服务。避免client与server的网络问题，而出现大量的服务被清除。本地开发设为false
    eviction-interval-timer-in-ms: 30000 #开启清除无效服务的定时任务，时间间隔。默认1分钟

# 日志
logging:
  level:
    root: INFO
  #    root: DEBUG
  file:
    #    name: logs/${spring.application.name}.log
    path: ./logs  #path和name两个写一个就可以，使用path，默认日志名spring.log
    clean-history-on-start: true
    max-size: 10MB
    max-history: 180
    total-size-cap: 2GB
  config: classpath:config/log/logback.xml

# 管理接口
management:
  endpoints:
    web:
      base-path: /admin
      exposure:
        include: logfile,loggers,health,configprops,info,scheduledtasks,metrics,shutdown
  endpoint:
    shutdown:
      enabled: true

# 服务信息
info:
  app:
    name: 注册中心
    shortName: eureka
    version: 0.0.1
    encoding: UTF-8
    java.source: 1.8
    java.traget: 1.8