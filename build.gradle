apply plugin: 'java'
group = 'indi.ikun.spring'
version = '1.0.0-SNAPSHOT'
//全局java版本
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

jar.enabled=false

buildscript {
    ext {
        // 定义变量
        springBootVersion = '1.5.19.RELEASE'
        springCloudVersion = 'Edgware.SR5'
    }

    repositories {
        //优先使用maven本地仓库
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        //用来 打包
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {
    apply plugin: 'java'
    /**
     *    api() 方法需要引入java-library
     *    api=compile 依赖可以传递 compile说是要抛弃
     *    implementation 依赖不能传递给下一层
     */
    apply plugin: 'java-library'


    compileTestJava.enabled=false
    processTestResources.enabled=false
    testClasses.enabled=false
    test.enabled=false
    
    //指定编码格式
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    repositories {
        //优先使用maven本地仓库
        mavenLocal()
        mavenCentral()
    }


}
// 子项目的公共配置及插件
subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    dependencies {
        //lombok注解gradle识别不到
        annotationProcessor "org.projectlombok:lombok:1.16.16"
        testAnnotationProcessor "org.projectlombok:lombok:1.16.16"
        //统一单元测试配置
        testImplementation("org.springframework.boot:spring-boot-starter-test")
    }
    jar {
        manifest.attributes provider: 'gradle'
    }
    dependencyManagement {
        imports {
            /**
             * 解决cloud零散jar的版本问题,也会引入一些版本冲突的问题，会修改依赖的版本，后续深入学习，寻找好的解决方案
             * 此处会导致swagger-ui2.9.2（2.8.0无问题）版本引入的guava-20.jar降级成guava-18.jar,项目启动会报错，详情请看demo-springboot项目
              */
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}


